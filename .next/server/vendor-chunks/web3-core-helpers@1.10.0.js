"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/web3-core-helpers@1.10.0";
exports.ids = ["vendor-chunks/web3-core-helpers@1.10.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/web3-core-helpers@1.10.0/node_modules/web3-core-helpers/lib/errors.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/web3-core-helpers@1.10.0/node_modules/web3-core-helpers/lib/errors.js ***!
  \**************************************************************************************************/
/***/ ((module) => {

eval("/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file errors.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @author Marek Kotewicz <marek@parity.io>\n * @date 2017\n */\n\nmodule.exports = {\n    ErrorResponse: function (result) {\n        var message = !!result && !!result.error && !!result.error.message ? result.error.message : JSON.stringify(result);\n        var data = (!!result.error && !!result.error.data) ? result.error.data : null;\n        var err = new Error('Returned error: ' + message);\n        err.data = data;\n        return err;\n    },\n    InvalidNumberOfParams: function (got, expected, method) {\n        return new Error('Invalid number of parameters for \"' + method + '\". Got ' + got + ' expected ' + expected + '!');\n    },\n    InvalidConnection: function (host, event) {\n        return this.ConnectionError('CONNECTION ERROR: Couldn\\'t connect to node ' + host + '.', event);\n    },\n    InvalidProvider: function () {\n        return new Error('Provider not set or invalid');\n    },\n    InvalidResponse: function (result) {\n        var message = !!result && !!result.error && !!result.error.message ? result.error.message : 'Invalid JSON RPC response: ' + JSON.stringify(result);\n        return new Error(message);\n    },\n    ConnectionTimeout: function (ms) {\n        return new Error('CONNECTION TIMEOUT: timeout of ' + ms + ' ms achived');\n    },\n    ConnectionNotOpenError: function (event) {\n        return this.ConnectionError('connection not open on send()', event);\n    },\n    ConnectionCloseError: function (event) {\n        if (typeof event === 'object' && event.code && event.reason) {\n            return this.ConnectionError('CONNECTION ERROR: The connection got closed with ' +\n                'the close code `' + event.code + '` and the following ' +\n                'reason string `' + event.reason + '`', event);\n        }\n        return new Error('CONNECTION ERROR: The connection closed unexpectedly');\n    },\n    MaxAttemptsReachedOnReconnectingError: function () {\n        return new Error('Maximum number of reconnect attempts reached!');\n    },\n    PendingRequestsOnReconnectingError: function () {\n        return new Error('CONNECTION ERROR: Provider started to reconnect before the response got received!');\n    },\n    ConnectionError: function (msg, event) {\n        const error = new Error(msg);\n        if (event) {\n            error.code = event.code;\n            error.reason = event.reason;\n            if (event.description) {\n                error.description = event.description;\n            }\n        }\n        return error;\n    },\n    RevertInstructionError: function (reason, signature) {\n        var error = new Error('Your request got reverted with the following reason string: ' + reason);\n        error.reason = reason;\n        error.signature = signature;\n        return error;\n    },\n    TransactionRevertInstructionError: function (reason, signature, receipt) {\n        var error = new Error('Transaction has been reverted by the EVM:\\n' + JSON.stringify(receipt, null, 2));\n        error.reason = reason;\n        error.signature = signature;\n        error.receipt = receipt;\n        return error;\n    },\n    TransactionError: function (message, receipt) {\n        var error = new Error(message);\n        error.receipt = receipt;\n        return error;\n    },\n    NoContractAddressFoundError: function (receipt) {\n        return this.TransactionError('The transaction receipt didn\\'t contain a contract address.', receipt);\n    },\n    ContractCodeNotStoredError: function (receipt) {\n        return this.TransactionError('The contract code couldn\\'t be stored, please check your gas limit.', receipt);\n    },\n    TransactionRevertedWithoutReasonError: function (receipt) {\n        return this.TransactionError('Transaction has been reverted by the EVM:\\n' + JSON.stringify(receipt, null, 2), receipt);\n    },\n    TransactionOutOfGasError: function (receipt) {\n        return this.TransactionError('Transaction ran out of gas. Please provide more gas:\\n' + JSON.stringify(receipt, null, 2), receipt);\n    },\n    ResolverMethodMissingError: function (address, name) {\n        return new Error('The resolver at ' + address + 'does not implement requested method: \"' + name + '\".');\n    },\n    ContractMissingABIError: function () {\n        return new Error('You must provide the json interface of the contract when instantiating a contract object.');\n    },\n    ContractOnceRequiresCallbackError: function () {\n        return new Error('Once requires a callback as the second parameter.');\n    },\n    ContractEventDoesNotExistError: function (eventName) {\n        return new Error('Event \"' + eventName + '\" doesn\\'t exist in this contract.');\n    },\n    ContractReservedEventError: function (type) {\n        return new Error('The event \"' + type + '\" is a reserved event name, you can\\'t use it.');\n    },\n    ContractMissingDeployDataError: function () {\n        return new Error('No \"data\" specified in neither the given options, nor the default options.');\n    },\n    ContractNoAddressDefinedError: function () {\n        return new Error('This contract object doesn\\'t have address set yet, please set an address first.');\n    },\n    ContractNoFromAddressDefinedError: function () {\n        return new Error('No \"from\" address specified in neither the given options, nor the default options.');\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/web3-core-helpers@1.10.0/node_modules/web3-core-helpers/lib/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/web3-core-helpers@1.10.0/node_modules/web3-core-helpers/lib/formatters.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/web3-core-helpers@1.10.0/node_modules/web3-core-helpers/lib/formatters.js ***!
  \******************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file formatters.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @author Marek Kotewicz <marek@parity.io>\n * @date 2017\n */\n\nvar utils = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/.pnpm/web3-utils@1.10.0/node_modules/web3-utils/lib/index.js\");\nvar Iban = __webpack_require__(/*! web3-eth-iban */ \"(ssr)/./node_modules/.pnpm/web3-eth-iban@1.10.0/node_modules/web3-eth-iban/lib/index.js\");\n/**\n * Will format the given storage key array values to hex strings.\n *\n * @method inputStorageKeysFormatter\n *\n * @param {Array<Number|String|BN|BigNumber>} keys\n *\n * @returns {Array<String>}\n */\nvar inputStorageKeysFormatter = function (keys) {\n    return keys.map(utils.numberToHex);\n};\n/**\n * Will format the given proof response from the node.\n *\n * @method outputProofFormatter\n *\n * @param {object} proof\n *\n * @returns {object}\n */\nvar outputProofFormatter = function (proof) {\n    proof.address = utils.toChecksumAddress(proof.address);\n    proof.nonce = utils.hexToNumberString(proof.nonce);\n    proof.balance = utils.hexToNumberString(proof.balance);\n    return proof;\n};\n/**\n * Should the format output to a big number\n *\n * @method outputBigNumberFormatter\n *\n * @param {String|Number|BigNumber|BN} number\n *\n * @returns {BN} object\n */\nvar outputBigNumberFormatter = function (number) {\n    return utils.toBN(number).toString(10);\n};\n/**\n * Returns true if the given blockNumber is 'latest', 'pending', 'earliest, 'finalized' or 'safe'\n *\n * @method isPredefinedBlockNumber\n *\n * @param {String} blockNumber\n *\n * @returns {Boolean}\n */\nvar isPredefinedBlockNumber = function (blockNumber) {\n    return ['latest', 'pending', 'earliest', 'finalized', 'safe'].includes(blockNumber);\n};\n/**\n * Returns the given block number as hex string or does return the defaultBlock property of the current module\n *\n * @method inputDefaultBlockNumberFormatter\n *\n * @param {String|Number|BN|BigNumber} blockNumber\n *\n * @returns {String}\n */\nvar inputDefaultBlockNumberFormatter = function (blockNumber) {\n    if (this && (blockNumber === undefined || blockNumber === null)) {\n        return inputBlockNumberFormatter(this.defaultBlock);\n    }\n    return inputBlockNumberFormatter(blockNumber);\n};\n/**\n * Returns the given block number as hex string or the predefined block number 'latest', 'pending', 'earliest', 'finalized', 'safe', 'genesis'\n *\n * @param {String|Number|BN|BigNumber} blockNumber\n *\n * @returns {String}\n */\nvar inputBlockNumberFormatter = function (blockNumber) {\n    if (blockNumber === undefined) {\n        return undefined;\n    }\n    if (isPredefinedBlockNumber(blockNumber)) {\n        return blockNumber;\n    }\n    if (blockNumber === 'genesis') {\n        return '0x0';\n    }\n    return (utils.isHexStrict(blockNumber)) ? ((typeof blockNumber === 'string') ? blockNumber.toLowerCase() : blockNumber) : utils.numberToHex(blockNumber);\n};\n/**\n * Formats the input of a transaction and converts all values to HEX\n *\n * @method _txInputFormatter\n * @param {Object} transaction options\n * @returns object\n */\nvar _txInputFormatter = function (options) {\n    if (options.to) { // it might be contract creation\n        options.to = inputAddressFormatter(options.to);\n    }\n    if (options.data && options.input) {\n        throw new Error('You can\\'t have \"data\" and \"input\" as properties of transactions at the same time, please use either \"data\" or \"input\" instead.');\n    }\n    if (!options.data && options.input) {\n        options.data = options.input;\n        delete options.input;\n    }\n    if (options.data && !options.data.startsWith('0x')) {\n        options.data = '0x' + options.data;\n    }\n    if (options.data && !utils.isHex(options.data)) {\n        throw new Error('The data field must be HEX encoded data.');\n    }\n    // allow both\n    if (options.gas || options.gasLimit) {\n        options.gas = options.gas || options.gasLimit;\n    }\n    if (options.maxPriorityFeePerGas || options.maxFeePerGas) {\n        delete options.gasPrice;\n    }\n    ['gasPrice', 'gas', 'value', 'maxPriorityFeePerGas', 'maxFeePerGas', 'nonce', 'type'].filter(function (key) {\n        return options[key] !== undefined;\n    }).forEach(function (key) {\n        options[key] = utils.numberToHex(options[key]);\n    });\n    return options;\n};\n/**\n * Formats the input of a transaction and converts all values to HEX\n *\n * @method inputCallFormatter\n * @param {Object} transaction options\n * @returns object\n */\nvar inputCallFormatter = function (options) {\n    options = _txInputFormatter(options);\n    var from = options.from || (this ? this.defaultAccount : null);\n    if (from) {\n        options.from = inputAddressFormatter(from);\n    }\n    return options;\n};\n/**\n * Formats the input of a transaction and converts all values to HEX\n *\n * @method inputTransactionFormatter\n * @param {Object} options\n * @returns object\n */\nvar inputTransactionFormatter = function (options) {\n    options = _txInputFormatter(options);\n    // check from, only if not number, or object\n    if (!(typeof options.from === 'number') && !(!!options.from && typeof options.from === 'object')) {\n        options.from = options.from || (this ? this.defaultAccount : null);\n        if (!options.from && !(typeof options.from === 'number')) {\n            throw new Error('The send transactions \"from\" field must be defined!');\n        }\n        options.from = inputAddressFormatter(options.from);\n    }\n    return options;\n};\n/**\n * Hex encodes the data passed to eth_sign and personal_sign\n *\n * @method inputSignFormatter\n * @param {String} data\n * @returns {String}\n */\nvar inputSignFormatter = function (data) {\n    return (utils.isHexStrict(data)) ? data : utils.utf8ToHex(data);\n};\n/**\n * Formats the output of a transaction to its proper values\n *\n * @method outputTransactionFormatter\n * @param {Object} tx\n * @returns {Object}\n */\nvar outputTransactionFormatter = function (tx, hexFormat) {\n    if (!hexFormat) {\n        if (tx.blockNumber !== null)\n            tx.blockNumber = utils.hexToNumber(tx.blockNumber);\n        if (tx.transactionIndex !== null)\n            tx.transactionIndex = utils.hexToNumber(tx.transactionIndex);\n        tx.nonce = utils.hexToNumber(tx.nonce);\n        tx.gas = utils.hexToNumber(tx.gas);\n        if (tx.type)\n            tx.type = utils.hexToNumber(tx.type);\n    }\n    if (tx.gasPrice)\n        tx.gasPrice = outputBigNumberFormatter(tx.gasPrice);\n    if (tx.maxFeePerGas)\n        tx.maxFeePerGas = outputBigNumberFormatter(tx.maxFeePerGas);\n    if (tx.maxPriorityFeePerGas)\n        tx.maxPriorityFeePerGas = outputBigNumberFormatter(tx.maxPriorityFeePerGas);\n    tx.value = outputBigNumberFormatter(tx.value);\n    if (tx.to && utils.isAddress(tx.to)) { // tx.to could be `0x0` or `null` while contract creation\n        tx.to = utils.toChecksumAddress(tx.to);\n    }\n    else {\n        tx.to = null; // set to `null` if invalid address\n    }\n    if (tx.from) {\n        tx.from = utils.toChecksumAddress(tx.from);\n    }\n    return tx;\n};\n/**\n * Formats the output of a transaction receipt to its proper values\n *\n * @method outputTransactionReceiptFormatter\n * @param {Object} receipt\n * @returns {Object}\n */\nvar outputTransactionReceiptFormatter = function (receipt) {\n    if (typeof receipt !== 'object') {\n        throw new Error('Received receipt is invalid: ' + receipt);\n    }\n    if (!this.hexFormat) {\n        if (receipt.blockNumber !== null)\n            receipt.blockNumber = utils.hexToNumber(receipt.blockNumber);\n        if (receipt.transactionIndex !== null)\n            receipt.transactionIndex = utils.hexToNumber(receipt.transactionIndex);\n        receipt.cumulativeGasUsed = utils.hexToNumber(receipt.cumulativeGasUsed);\n        receipt.gasUsed = utils.hexToNumber(receipt.gasUsed);\n        if (receipt.effectiveGasPrice) {\n            receipt.effectiveGasPrice = utils.hexToNumber(receipt.effectiveGasPrice);\n        }\n    }\n    if (Array.isArray(receipt.logs)) {\n        receipt.logs = receipt.logs.map(outputLogFormatter);\n    }\n    if (receipt.contractAddress) {\n        receipt.contractAddress = utils.toChecksumAddress(receipt.contractAddress);\n    }\n    if (typeof receipt.status !== 'undefined' && receipt.status !== null) {\n        receipt.status = Boolean(parseInt(receipt.status));\n    }\n    return receipt;\n};\n/**\n * Formats the output of a block to its proper values\n *\n * @method outputBlockFormatter\n * @param {Object} block\n * @returns {Object}\n */\nvar outputBlockFormatter = function (block, hexFormat) {\n    if (!hexFormat) {\n        // transform to number\n        block.gasLimit = utils.hexToNumber(block.gasLimit);\n        block.gasUsed = utils.hexToNumber(block.gasUsed);\n        block.size = utils.hexToNumber(block.size);\n        block.timestamp = utils.hexToNumber(block.timestamp);\n        if (block.number !== null)\n            block.number = utils.hexToNumber(block.number);\n    }\n    if (block.difficulty)\n        block.difficulty = outputBigNumberFormatter(block.difficulty);\n    if (block.totalDifficulty)\n        block.totalDifficulty = outputBigNumberFormatter(block.totalDifficulty);\n    if (Array.isArray(block.transactions)) {\n        block.transactions.forEach(function (item) {\n            if (!(typeof item === 'string'))\n                return outputTransactionFormatter(item, hexFormat);\n        });\n    }\n    if (block.miner)\n        block.miner = utils.toChecksumAddress(block.miner);\n    if (block.baseFeePerGas)\n        block.baseFeePerGas = utils.hexToNumber(block.baseFeePerGas);\n    return block;\n};\n/**\n * Formats the input of a log\n *\n * @method inputLogFormatter\n * @param {Object} log object\n * @returns {Object} log\n */\nvar inputLogFormatter = function (options) {\n    var toTopic = function (value) {\n        if (value === null || typeof value === 'undefined')\n            return null;\n        value = String(value);\n        if (value.indexOf('0x') === 0)\n            return value;\n        else\n            return utils.fromUtf8(value);\n    };\n    if (options === undefined)\n        options = {};\n    // If options !== undefined, don't blow out existing data\n    if (options.fromBlock === undefined)\n        options = { ...options, fromBlock: 'latest' };\n    if (options.fromBlock || options.fromBlock === 0)\n        options.fromBlock = inputBlockNumberFormatter(options.fromBlock);\n    if (options.toBlock || options.toBlock === 0)\n        options.toBlock = inputBlockNumberFormatter(options.toBlock);\n    // make sure topics, get converted to hex\n    options.topics = options.topics || [];\n    options.topics = options.topics.map(function (topic) {\n        return (Array.isArray(topic)) ? topic.map(toTopic) : toTopic(topic);\n    });\n    toTopic = null;\n    if (options.address) {\n        options.address = (Array.isArray(options.address)) ? options.address.map(function (addr) {\n            return inputAddressFormatter(addr);\n        }) : inputAddressFormatter(options.address);\n    }\n    return options;\n};\n/**\n * Formats the output of a log\n *\n * @method outputLogFormatter\n * @param {Object} log object\n * @returns {Object} log\n */\nvar outputLogFormatter = function (log) {\n    // generate a custom log id\n    if (typeof log.blockHash === 'string' &&\n        typeof log.transactionHash === 'string' &&\n        typeof log.logIndex === 'string') {\n        var shaId = utils.sha3(log.blockHash.replace('0x', '') + log.transactionHash.replace('0x', '') + log.logIndex.replace('0x', ''));\n        log.id = 'log_' + shaId.replace('0x', '').slice(0, 8);\n    }\n    else if (!log.id) {\n        log.id = null;\n    }\n    if (log.blockNumber !== null)\n        log.blockNumber = utils.hexToNumber(log.blockNumber);\n    if (log.transactionIndex !== null)\n        log.transactionIndex = utils.hexToNumber(log.transactionIndex);\n    if (log.logIndex !== null)\n        log.logIndex = utils.hexToNumber(log.logIndex);\n    if (log.address) {\n        log.address = utils.toChecksumAddress(log.address);\n    }\n    return log;\n};\n/**\n * Formats the input of a whisper post and converts all values to HEX\n *\n * @method inputPostFormatter\n * @param {Object} transaction object\n * @returns {Object}\n */\nvar inputPostFormatter = function (post) {\n    // post.payload = utils.toHex(post.payload);\n    if (post.ttl)\n        post.ttl = utils.numberToHex(post.ttl);\n    if (post.workToProve)\n        post.workToProve = utils.numberToHex(post.workToProve);\n    if (post.priority)\n        post.priority = utils.numberToHex(post.priority);\n    // fallback\n    if (!Array.isArray(post.topics)) {\n        post.topics = post.topics ? [post.topics] : [];\n    }\n    // format the following options\n    post.topics = post.topics.map(function (topic) {\n        // convert only if not hex\n        return (topic.indexOf('0x') === 0) ? topic : utils.fromUtf8(topic);\n    });\n    return post;\n};\n/**\n * Formats the output of a received post message\n *\n * @method outputPostFormatter\n * @param {Object}\n * @returns {Object}\n */\nvar outputPostFormatter = function (post) {\n    post.expiry = utils.hexToNumber(post.expiry);\n    post.sent = utils.hexToNumber(post.sent);\n    post.ttl = utils.hexToNumber(post.ttl);\n    post.workProved = utils.hexToNumber(post.workProved);\n    // post.payloadRaw = post.payload;\n    // post.payload = utils.hexToAscii(post.payload);\n    // if (utils.isJson(post.payload)) {\n    //     post.payload = JSON.parse(post.payload);\n    // }\n    // format the following options\n    if (!post.topics) {\n        post.topics = [];\n    }\n    post.topics = post.topics.map(function (topic) {\n        return utils.toUtf8(topic);\n    });\n    return post;\n};\nvar inputAddressFormatter = function (address) {\n    var iban = new Iban(address);\n    if (iban.isValid() && iban.isDirect()) {\n        return iban.toAddress().toLowerCase();\n    }\n    else if (utils.isAddress(address)) {\n        return '0x' + address.toLowerCase().replace('0x', '');\n    }\n    throw new Error(`Provided address ${address} is invalid, the capitalization checksum test failed, or it's an indirect IBAN address which can't be converted.`);\n};\nvar outputSyncingFormatter = function (result) {\n    result.startingBlock = utils.hexToNumber(result.startingBlock);\n    result.currentBlock = utils.hexToNumber(result.currentBlock);\n    result.highestBlock = utils.hexToNumber(result.highestBlock);\n    if (result.knownStates) {\n        result.knownStates = utils.hexToNumber(result.knownStates);\n        result.pulledStates = utils.hexToNumber(result.pulledStates);\n    }\n    return result;\n};\nmodule.exports = {\n    inputDefaultBlockNumberFormatter: inputDefaultBlockNumberFormatter,\n    inputBlockNumberFormatter: inputBlockNumberFormatter,\n    inputCallFormatter: inputCallFormatter,\n    inputTransactionFormatter: inputTransactionFormatter,\n    inputAddressFormatter: inputAddressFormatter,\n    inputPostFormatter: inputPostFormatter,\n    inputLogFormatter: inputLogFormatter,\n    inputSignFormatter: inputSignFormatter,\n    inputStorageKeysFormatter: inputStorageKeysFormatter,\n    outputProofFormatter: outputProofFormatter,\n    outputBigNumberFormatter: outputBigNumberFormatter,\n    outputTransactionFormatter: outputTransactionFormatter,\n    outputTransactionReceiptFormatter: outputTransactionReceiptFormatter,\n    outputBlockFormatter: outputBlockFormatter,\n    outputLogFormatter: outputLogFormatter,\n    outputPostFormatter: outputPostFormatter,\n    outputSyncingFormatter: outputSyncingFormatter\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/web3-core-helpers@1.10.0/node_modules/web3-core-helpers/lib/formatters.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/web3-core-helpers@1.10.0/node_modules/web3-core-helpers/lib/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/web3-core-helpers@1.10.0/node_modules/web3-core-helpers/lib/index.js ***!
  \*************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\nvar errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/.pnpm/web3-core-helpers@1.10.0/node_modules/web3-core-helpers/lib/errors.js\");\nvar formatters = __webpack_require__(/*! ./formatters */ \"(ssr)/./node_modules/.pnpm/web3-core-helpers@1.10.0/node_modules/web3-core-helpers/lib/formatters.js\");\nmodule.exports = {\n    errors: errors,\n    formatters: formatters\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vd2ViMy1jb3JlLWhlbHBlcnNAMS4xMC4wL25vZGVfbW9kdWxlcy93ZWIzLWNvcmUtaGVscGVycy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDYTtBQUNiLGFBQWEsbUJBQU8sQ0FBQyxrSEFBVTtBQUMvQixpQkFBaUIsbUJBQU8sQ0FBQywwSEFBYztBQUN2QztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2tpY2tzdGFydC8uL25vZGVfbW9kdWxlcy8ucG5wbS93ZWIzLWNvcmUtaGVscGVyc0AxLjEwLjAvbm9kZV9tb2R1bGVzL3dlYjMtY29yZS1oZWxwZXJzL2xpYi9pbmRleC5qcz8zNjI0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gICAgVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxuICAgIHdlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICAgIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICAgIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gICAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxuICAgIHdlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAgICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAgICBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuICAgIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICAgIGFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG4vKipcbiAqIEBmaWxlIGluZGV4LmpzXG4gKiBAYXV0aG9yIEZhYmlhbiBWb2dlbHN0ZWxsZXIgPGZhYmlhbkBldGhlcmV1bS5vcmc+XG4gKiBAZGF0ZSAyMDE3XG4gKi9cblwidXNlIHN0cmljdFwiO1xudmFyIGVycm9ycyA9IHJlcXVpcmUoJy4vZXJyb3JzJyk7XG52YXIgZm9ybWF0dGVycyA9IHJlcXVpcmUoJy4vZm9ybWF0dGVycycpO1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgZXJyb3JzOiBlcnJvcnMsXG4gICAgZm9ybWF0dGVyczogZm9ybWF0dGVyc1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/web3-core-helpers@1.10.0/node_modules/web3-core-helpers/lib/index.js\n");

/***/ })

};
;